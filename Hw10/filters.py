import matplotlib.pyplot as plt
import numpy as np
import csv

tA = [] # column 0
dataA = [] # column 1

with open('sigA.csv') as f:
    # open the csv file
    reader = csv.reader(f)
    for row in reader:
        # read the rows 1 one by one
        tA.append(float(row[0])) # leftmost column
        dataA.append(float(row[1])) # second column

tB = [] # column 0
dataB = [] # column 1

with open('sigB.csv') as f:
    # open the csv file
    reader = csv.reader(f)
    for row in reader:
        # read the rows 1 one by one
        tB.append(float(row[0])) # leftmost column
        dataB.append(float(row[1])) # second column

tC = [] # column 0
dataC = [] # column 1

with open('sigC.csv') as f:
    # open the csv file
    reader = csv.reader(f)
    for row in reader:
        # read the rows 1 one by one
        tC.append(float(row[0])) # leftmost column
        dataC.append(float(row[1])) # second column

tD = [] # column 0
dataD = [] # column 1

with open('sigD.csv') as f:
    # open the csv file
    reader = csv.reader(f)
    for row in reader:
        # read the rows 1 one by one
        tD.append(float(row[0])) # leftmost column
        dataD.append(float(row[1])) # second column

def takefft(t,data):
    dt = (t[-1]-t[0])/len(data)
    Fs = 1.0/dt # sample rate
    Ts = t[-1]; # sampling interval
    ts = np.arange(0,t[-1],Ts) # time vector
    y = data # the data to make the fft from
    n = len(y) # length of the signal
    k = np.arange(n)
    T = n/Fs
    frq = k/T # two sides frequency range
    frq = frq[range(int(n/2))] # one side frequency range
    Y = np.fft.fft(y)/n # fft computing and normalization
    Y = Y[range(int(n/2))]

    fig, (ax1, ax2) = plt.subplots(2, 1)
    ax1.plot(t,y,'b')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Signal Amplitude')
    ax2.loglog(frq,abs(Y),'b') # plotting the fft
    ax2.set_xlabel('Freq (Hz)')
    ax2.set_ylabel('|Y(freq)|')
    plt.show()
    print(f'{Fs}')

def singlefft(t,data):
    dt = (t[-1]-t[0])/len(data)
    Fs = 1.0/dt # sample rate
    Ts = t[-1]; # sampling interval
    ts = np.arange(0,t[-1],Ts) # time vector
    y = data # the data to make the fft from
    n = len(y) # length of the signal
    k = np.arange(n)
    T = n/Fs
    frq = k/T # two sides frequency range
    frq = frq[range(int(n/2))] # one side frequency range
    Y = np.fft.fft(y)/n # fft computing and normalization
    Y = Y[range(int(n/2))]
    return frq,Y


    frq1,Y1 = singlefft(t1,data1)
    frq2,Y2 = singlefft(t2,data2)
    fig, (ax1, ax2) = plt.subplots(2, 1)
    ax1.plot(t1,data1,'k',t2,data2,'r')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Signal Amplitude')
    ax2.loglog(frq1,abs(Y1),'k',frq2,abs(Y2),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)')
    ax2.set_ylabel('|Y(freq)|')
    plt.show()

def maf(mafnum, t, data):
    maf_t =[]
    maf_data = []
    average = 0
    for i in range(mafnum,len(data)):
        average = sum(data[i - mafnum:i]) / mafnum
        maf_data.append(average)
        maf_t.append(t[i])

    frq1,Y1 = singlefft(t,data)
    frq2,Y2 = singlefft(maf_t,maf_data)
    fig, (ax1, ax2) = plt.subplots(2, 1)
    plt.suptitle(f'Data points = {mafnum}', y = 0.95)
    ax1.plot(t,data,'k',maf_t,maf_data,'r')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Signal Amplitude')
    ax2.loglog(frq1,abs(Y1),'k',frq2,abs(Y2),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)')
    ax2.set_ylabel('|Y(freq)|')
    plt.show()

def iir(A,B,t,data):
    iir_t = []
    iir_data = []
    average = 0
    for i in range(len(t)-1):
        average = A * average + data[i+1] * B
        iir_data.append(average)
        iir_t.append(t[i])
    frq1,Y1 = singlefft(t,data)
    frq2,Y2 = singlefft(iir_t,iir_data)
    fig, (ax1, ax2) = plt.subplots(2, 1)
    plt.suptitle(f'A = {A}, B = {B}', y = 0.95)
    ax1.plot(t,data,'k',iir_t,iir_data,'r')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Signal Amplitude')
    ax2.loglog(frq1,abs(Y1),'k',frq2,abs(Y2),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)') 
    ax2.set_ylabel('|Y(freq)|')
    plt.show()

#takefft(tA,dataA)
#takefft(tB,dataB)
#takefft(tC,dataC)
#takefft(tD,dataD)

#maf(20,tD,dataD)
#iir(0.9,0.1,tD,dataD)

# Filter Settings: Kaiser Filter, Sampling Rate: 10000Hz, Cutoff Frequency: 100Hz
# Transition bandwith: 1000Hz, Stopband attenuation: 80dB
hA = [
    0.000075014484478296,
    0.000199366143712436,
    0.000403754324636956,
    0.000714366164908648,
    0.001160029051180863,
    0.001771086141055419,
    0.002577941912377962,
    0.003609327482612426,
    0.004890365705191298,
    0.006440539987330479,
    0.008271691276731507,
    0.010386180214923756,
    0.012775354521869916,
    0.015418454489234835,
    0.018282071715345027,
    0.021320248511815285,
    0.024475269217499922,
    0.027679152218912314,
    0.030855805676171195,
    0.033923764085543172,
    0.036799380329189744,
    0.039400312104126846,
    0.041649115518860011,
    0.043476744475333694,
    0.044825753632428397,
    0.045653015693749292,
    0.045931789841560100,
    0.045653015693749292,
    0.044825753632428397,
    0.043476744475333694,
    0.041649115518860011,
    0.039400312104126846,
    0.036799380329189744,
    0.033923764085543172,
    0.030855805676171195,
    0.027679152218912314,
    0.024475269217499922,
    0.021320248511815285,
    0.018282071715345027,
    0.015418454489234835,
    0.012775354521869895,
    0.010386180214923756,
    0.008271691276731507,
    0.006440539987330488,
    0.004890365705191298,
    0.003609327482612426,
    0.002577941912377962,
    0.001771086141055419,
    0.001160029051180863,
    0.000714366164908648,
    0.000403754324636956,
    0.000199366143712437,
    0.000075014484478296,
]

# Filter Settings: Kaiser Filter, Sampling Rate: 3300Hz, Cutoff Frequency: 33Hz
# Transition bandwith: 33Hz, Stopband attenuation: 80dB
hB = [
    -0.000000212880802539,
    0.000000000000000000,
    0.000000270466427397,
    0.000000602832840260,
    0.000001001174167869,
    0.000001469263619215,
    0.000002010508522092,
    0.000002627884740110,
    0.000003323870155865,
    0.000004100377744819,
    0.000004958688798338,
    0.000005899386885372,
    0.000006922293170157,
    0.000008026403727600,
    0.000009209829518410,
    0.000010469739702178,
    0.000011802308978130,
    0.000013202669649962,
    0.000014664869112640,
    0.000016181833455117,
    0.000017745337863356,
    0.000019345984492600,
    0.000020973188456463,
    0.000022615172552851,
    0.000024258971313058,
    0.000025890444920420,
    0.000027494303498809,
    0.000029054142218940,
    0.000030552487612158,
    0.000031970855417147,
    0.000033289820215140,
    0.000034489097949349,
    0.000035547637771504,
    0.000036443729591526,
    0.000037155120205613,
    0.000037659143833496,
    0.000037932863212361,
    0.000037953221909232,
    0.000037697207378296,
    0.000037142024188435,
    0.000036265276743556,
    0.000035045160715119,
    0.000033460662303410,
    0.000031491764342462,
    0.000029119658163912,
    0.000026326960038358,
    0.000023097930919781,
    0.000019418698130168,
    0.000015277477538405,
    0.000010664794710710,
    0.000005573703440052,
    0.000000000000000000,
    -0.000006057568584957,
    -0.000012597104004735,
    -0.000019613365650855,
    -0.000027097590935242,
    -0.000035037328762584,
    -0.000043416287978675,
    -0.000052214202605313,
    -0.000061406715647805,
    -0.000070965283223515,
    -0.000080857100708991,
    -0.000091045052538728,
    -0.000101487687210530,
    -0.000112139218960660,
    -0.000122949557466596,
    -0.000133864366816351,
    -0.000144825154851323,
    -0.000155769393844721,
    -0.000166630673320346,
    -0.000177338885647337,
    -0.000187820444866104,
    -0.000197998539009827,
    -0.000207793415985329,
    -0.000217122702867886,
    -0.000225901758247527,
    -0.000234044057040759,
    -0.000241461606952530,
    -0.000248065395540002,
    -0.000253765866593469,
    -0.000258473424312141,
    -0.000262098963514718,
    -0.000264554423888442,
    -0.000265753366046925,
    -0.000265611566938266,
    -0.000264047631922280,
    -0.000260983620620646,
    -0.000256345683438166,
    -0.000250064705458509,
    -0.000242076954235646,
    -0.000232324727833900,
    -0.000220756999316976,
    -0.000207330053750720,
    -0.000192008113667220,
    -0.000174763948840554,
    -0.000155579466148175,
    -0.000134446275237921,
    -0.000111366225689824,
    -0.000086351911355506,
    -0.000059427137576487,
    -0.000030627347027285,
    0.000000000000000000,
    0.000032395094955121,
    0.000066485503993792,
    0.000102185948354917,
    0.000139398145779896,
    0.000178010716396498,
    0.000217899156256390,
    0.000258925881456022,
    0.000300940345485457,
    0.000343779232140102,
    0.000387266725996935,
    0.000431214862101097,
    0.000475423956131914,
    0.000519683115921050,
    0.000563770834781310,
    0.000607455666674418,
    0.000650496982801853,
    0.000692645808746662,
    0.000733645740828379,
    0.000773233939859979,
    0.000811142200017829,
    0.000847098090055281,
    0.000880826163610568,
    0.000912049234882704,
    0.000940489715477967,
    0.000965871007766904,
    0.000987918949640627,
    0.001006363305118162,
    0.001020939294836631,
    0.001031389160055808,
    0.001037463753430985,
    0.001038924149455552,
    0.001035543267150051,
    0.001027107497280085,
    0.001013418326123803,
    0.000994293947582949,
    0.000969570855241850,
    0.000939105405828134,
    0.000902775345419215,
    0.000860481289671321,
    0.000812148149324363,
    0.000757726492257571,
    0.000697193833438445,
    0.000630555844221922,
    0.000557847472618325,
    0.000479133966357733,
    0.000394511790835077,
    0.000304109434324044,
    0.000208088093198413,
    0.000106642230295797,
    0.000000000000000000,
    -0.000111576465897177,
    -0.000227790916967275,
    -0.000348312992395720,
    -0.000472778382953174,
    -0.000600789150289286,
    -0.000731914206477538,
    -0.000865689956036775,
    -0.001001621101924973,
    -0.001139181616246769,
    -0.001277815875642060,
    -0.001416939960531747,
    -0.001555943116592756,
    -0.001694189376021057,
    -0.001831019335323313,
    -0.001965752085558325,
    -0.002097687290133570,
    -0.002226107404453485,
    -0.002350280030919447,
    -0.002469460402000671,
    -0.002582893983334938,
    -0.002689819188082336,
    -0.002789470193048275,
    -0.002881079846417967,
    -0.002963882656307473,
    -0.003037117848740024,
    -0.003100032483104341,
    -0.003151884612647886,
    -0.003191946477105272,
    -0.003219507714164051,
    -0.003233878576129169,
    -0.003234393137866760,
    -0.003220412481889127,
    -0.003191327846288839,
    -0.003146563721141683,
    -0.003085580878977558,
    -0.003007879324966768,
    -0.002913001152586257,
    -0.002800533290717984,
    -0.002670110128388364,
    -0.002521416003684665,
    -0.002354187543779465,
    -0.002168215843457804,
    -0.001963348470071238,
    -0.001739491283437514,
    -0.001496610059861479,
    -0.001234731910169897,
    -0.000953946482427224,
    -0.000654406940827841,
    -0.000336330713139634,
    0.000000000000000001,
    0.000354237959665284,
    0.000725970871821850,
    0.001114721622784489,
    0.001519948769560366,
    0.001941047286588894,
    0.002377349569273736,
    0.002828126693572402,
    0.003292589929770067,
    0.003769892507422160,
    0.004259131627310174,
    0.004759350715122915,
    0.005269541910456470,
    0.005788648783626053,
    0.006315569271707199,
    0.006849158824177742,
    0.007388233747521491,
    0.007931574737183707,
    0.008477930584343419,
    0.009026022044092703,
    0.009574545850792439,
    0.010122178865613124,
    0.010667582340571221,
    0.011209406282740234,
    0.011746293901755476,
    0.012276886123244264,
    0.012799826150403001,
    0.013313764055610400,
    0.013817361383715877,
    0.014309295748473580,
    0.014788265403507892,
    0.015252993769196869,
    0.015702233896944633,
    0.016134772852484700,
    0.016549436000110378,
    0.016945091170067185,
    0.017320652691763413,
    0.017675085275956421,
    0.018007407729652605,
    0.018316696488115847,
    0.018602088949108489,
    0.018862786595289061,
    0.019098057891556497,
    0.019307240945059694,
    0.019489745916576692,
    0.019645057173008951,
    0.019772735171823579,
    0.019872418069409405,
    0.019943823046482546,
    0.019986747344880016,
    0.020001069011310314,
    0.019986747344880016,
    0.019943823046482546,
    0.019872418069409405,
    0.019772735171823579,
    0.019645057173008951,
    0.019489745916576692,
    0.019307240945059694,
    0.019098057891556497,
    0.018862786595289061,
    0.018602088949108489,
    0.018316696488115847,
    0.018007407729652605,
    0.017675085275956421,
    0.017320652691763413,
    0.016945091170067185,
    0.016549436000110378,
    0.016134772852484700,
    0.015702233896944633,
    0.015252993769196869,
    0.014788265403507892,
    0.014309295748473580,
    0.013817361383715877,
    0.013313764055610400,
    0.012799826150403001,
    0.012276886123244264,
    0.011746293901755476,
    0.011209406282740234,
    0.010667582340571221,
    0.010122178865613124,
    0.009574545850792439,
    0.009026022044092703,
    0.008477930584343419,
    0.007931574737183707,
    0.007388233747521491,
    0.006849158824177742,
    0.006315569271707199,
    0.005788648783626053,
    0.005269541910456470,
    0.004759350715122915,
    0.004259131627310174,
    0.003769892507422160,
    0.003292589929770067,
    0.002828126693572402,
    0.002377349569273736,
    0.001941047286588892,
    0.001519948769560366,
    0.001114721622784489,
    0.000725970871821850,
    0.000354237959665284,
    0.000000000000000001,
    -0.000336330713139634,
    -0.000654406940827841,
    -0.000953946482427224,
    -0.001234731910169897,
    -0.001496610059861479,
    -0.001739491283437514,
    -0.001963348470071238,
    -0.002168215843457804,
    -0.002354187543779465,
    -0.002521416003684665,
    -0.002670110128388364,
    -0.002800533290717984,
    -0.002913001152586257,
    -0.003007879324966768,
    -0.003085580878977558,
    -0.003146563721141683,
    -0.003191327846288839,
    -0.003220412481889127,
    -0.003234393137866760,
    -0.003233878576129169,
    -0.003219507714164051,
    -0.003191946477105272,
    -0.003151884612647886,
    -0.003100032483104341,
    -0.003037117848740024,
    -0.002963882656307473,
    -0.002881079846417967,
    -0.002789470193048275,
    -0.002689819188082336,
    -0.002582893983334938,
    -0.002469460402000671,
    -0.002350280030919447,
    -0.002226107404453485,
    -0.002097687290133570,
    -0.001965752085558325,
    -0.001831019335323314,
    -0.001694189376021057,
    -0.001555943116592756,
    -0.001416939960531747,
    -0.001277815875642060,
    -0.001139181616246769,
    -0.001001621101924973,
    -0.000865689956036775,
    -0.000731914206477538,
    -0.000600789150289286,
    -0.000472778382953174,
    -0.000348312992395719,
    -0.000227790916967275,
    -0.000111576465897177,
    0.000000000000000000,
    0.000106642230295797,
    0.000208088093198413,
    0.000304109434324044,
    0.000394511790835077,
    0.000479133966357732,
    0.000557847472618325,
    0.000630555844221921,
    0.000697193833438445,
    0.000757726492257570,
    0.000812148149324363,
    0.000860481289671321,
    0.000902775345419215,
    0.000939105405828134,
    0.000969570855241850,
    0.000994293947582949,
    0.001013418326123803,
    0.001027107497280085,
    0.001035543267150051,
    0.001038924149455552,
    0.001037463753430985,
    0.001031389160055808,
    0.001020939294836631,
    0.001006363305118162,
    0.000987918949640627,
    0.000965871007766904,
    0.000940489715477967,
    0.000912049234882704,
    0.000880826163610568,
    0.000847098090055281,
    0.000811142200017829,
    0.000773233939859979,
    0.000733645740828379,
    0.000692645808746662,
    0.000650496982801853,
    0.000607455666674418,
    0.000563770834781310,
    0.000519683115921050,
    0.000475423956131914,
    0.000431214862101097,
    0.000387266725996935,
    0.000343779232140102,
    0.000300940345485457,
    0.000258925881456022,
    0.000217899156256390,
    0.000178010716396498,
    0.000139398145779896,
    0.000102185948354917,
    0.000066485503993792,
    0.000032395094955121,
    0.000000000000000000,
    -0.000030627347027285,
    -0.000059427137576487,
    -0.000086351911355506,
    -0.000111366225689824,
    -0.000134446275237921,
    -0.000155579466148175,
    -0.000174763948840553,
    -0.000192008113667220,
    -0.000207330053750720,
    -0.000220756999316976,
    -0.000232324727833900,
    -0.000242076954235646,
    -0.000250064705458509,
    -0.000256345683438166,
    -0.000260983620620646,
    -0.000264047631922280,
    -0.000265611566938266,
    -0.000265753366046925,
    -0.000264554423888442,
    -0.000262098963514718,
    -0.000258473424312141,
    -0.000253765866593469,
    -0.000248065395540002,
    -0.000241461606952530,
    -0.000234044057040759,
    -0.000225901758247527,
    -0.000217122702867886,
    -0.000207793415985329,
    -0.000197998539009827,
    -0.000187820444866104,
    -0.000177338885647337,
    -0.000166630673320346,
    -0.000155769393844721,
    -0.000144825154851323,
    -0.000133864366816351,
    -0.000122949557466596,
    -0.000112139218960660,
    -0.000101487687210530,
    -0.000091045052538728,
    -0.000080857100708991,
    -0.000070965283223515,
    -0.000061406715647805,
    -0.000052214202605313,
    -0.000043416287978675,
    -0.000035037328762584,
    -0.000027097590935242,
    -0.000019613365650855,
    -0.000012597104004735,
    -0.000006057568584957,
    0.000000000000000000,
    0.000005573703440052,
    0.000010664794710710,
    0.000015277477538405,
    0.000019418698130168,
    0.000023097930919781,
    0.000026326960038358,
    0.000029119658163912,
    0.000031491764342462,
    0.000033460662303410,
    0.000035045160715119,
    0.000036265276743556,
    0.000037142024188435,
    0.000037697207378296,
    0.000037953221909232,
    0.000037932863212361,
    0.000037659143833496,
    0.000037155120205613,
    0.000036443729591526,
    0.000035547637771504,
    0.000034489097949349,
    0.000033289820215140,
    0.000031970855417147,
    0.000030552487612158,
    0.000029054142218940,
    0.000027494303498809,
    0.000025890444920420,
    0.000024258971313058,
    0.000022615172552851,
    0.000020973188456463,
    0.000019345984492600,
    0.000017745337863356,
    0.000016181833455117,
    0.000014664869112640,
    0.000013202669649962,
    0.000011802308978130,
    0.000010469739702178,
    0.000009209829518410,
    0.000008026403727600,
    0.000006922293170157,
    0.000005899386885372,
    0.000004958688798338,
    0.000004100377744819,
    0.000003323870155865,
    0.000002627884740110,
    0.000002010508522092,
    0.000001469263619215,
    0.000001001174167869,
    0.000000602832840260,
    0.000000270466427397,
    0.000000000000000000,
    -0.000000212880802539,
]

# Filter Settings: Kaiser Filter, Sampling Rate: 2500Hz, Cutoff Frequency: 25Hz
# Transition bandwith: 250Hz, Stopband attenuation: 80dB
hC = [
    0.000075014484478296,
    0.000199366143712436,
    0.000403754324636956,
    0.000714366164908648,
    0.001160029051180863,
    0.001771086141055419,
    0.002577941912377962,
    0.003609327482612426,
    0.004890365705191298,
    0.006440539987330479,
    0.008271691276731507,
    0.010386180214923756,
    0.012775354521869916,
    0.015418454489234835,
    0.018282071715345027,
    0.021320248511815285,
    0.024475269217499922,
    0.027679152218912314,
    0.030855805676171195,
    0.033923764085543172,
    0.036799380329189744,
    0.039400312104126846,
    0.041649115518860011,
    0.043476744475333694,
    0.044825753632428397,
    0.045653015693749292,
    0.045931789841560100,
    0.045653015693749292,
    0.044825753632428397,
    0.043476744475333694,
    0.041649115518860011,
    0.039400312104126846,
    0.036799380329189744,
    0.033923764085543172,
    0.030855805676171195,
    0.027679152218912314,
    0.024475269217499922,
    0.021320248511815285,
    0.018282071715345027,
    0.015418454489234835,
    0.012775354521869895,
    0.010386180214923756,
    0.008271691276731507,
    0.006440539987330488,
    0.004890365705191298,
    0.003609327482612426,
    0.002577941912377962,
    0.001771086141055419,
    0.001160029051180863,
    0.000714366164908648,
    0.000403754324636956,
    0.000199366143712437,
    0.000075014484478296,
]

# Filter Settings: Kaiser Filter, Sampling Rate: 400Hz, Cutoff Frequency: 48Hz
# Transition bandwith: 44Hz, Stopband attenuation: 80dB
hD = [
    -0.000036921454565713,
    -0.000083799031579139,
    -0.000029295759608086,
    0.000254858568068365,
    0.000721659965048547,
    0.000986537482571160,
    0.000440609469509686,
    -0.001246430604759406,
    -0.003485004024434927,
    -0.004578273763705397,
    -0.002518030779465468,
    0.003344251184048748,
    0.010758991974039985,
    0.014631090234425702,
    0.009507413732555405,
    -0.006264191253084575,
    -0.027121683483331577,
    -0.040429459901408560,
    -0.031399188760899650,
    0.008918417373436727,
    0.076782398189105885,
    0.154476798560293449,
    0.216377117082654336,
    0.239984270002168210,
    0.216377117082654336,
    0.154476798560293449,
    0.076782398189105969,
    0.008918417373436717,
    -0.031399188760899650,
    -0.040429459901408560,
    -0.027121683483331577,
    -0.006264191253084575,
    0.009507413732555405,
    0.014631090234425702,
    0.010758991974039985,
    0.003344251184048745,
    -0.002518030779465468,
    -0.004578273763705397,
    -0.003485004024434927,
    -0.001246430604759406,
    0.000440609469509686,
    0.000986537482571161,
    0.000721659965048547,
    0.000254858568068364,
    -0.000029295759608086,
    -0.000083799031579139,
    -0.000036921454565713,
]

def fir(h,t,data,Cutoff,Transition,Stopband):
    fir_t =[]
    fir_data = []
    buffer = []
    average = 0
    for i in range(len(data)):
        buffer.append(data[i])
        if (len(buffer) == len(h)):
            average = np.dot(h, buffer)
            fir_data.append(average)
            fir_t.append(t[i])
            buffer.pop(0)

    frq1,Y1 = singlefft(t,data)
    frq2,Y2 = singlefft(fir_t,fir_data)
    fig, (ax1, ax2) = plt.subplots(2, 1)
    plt.suptitle(f'Kaiser filter, Cutoff freq: {Cutoff}Hz, Transition bandwith: {Transition}Hz, Stopband Attenuation: {Stopband}dB')
    ax1.plot(t,data,'k',fir_t,fir_data,'r')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Signal Amplitude')
    ax2.loglog(frq1,abs(Y1),'k',frq2,abs(Y2),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)')
    ax2.set_ylabel('|Y(freq)|')
    plt.show()

#fir(hA,tA,dataA,100,1000,80)
#fir(hB,tB,dataB,33,33,80)
#fir(hC,tC,dataC,25,250,80)
fir(hD,tD,dataD,48,44,80)